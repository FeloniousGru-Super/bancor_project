{
	"compiler": {
		"version": "0.4.26+commit.4563c3fc"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [],
				"name": "TOKEN_PRICE_D",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "sell",
				"outputs": [
					{
						"name": "amount",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "TOKEN_PRICE_N",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "version",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					},
					{
						"name": "_to",
						"type": "address"
					},
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdrawTokens",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "acceptOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "newOwner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "token",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"payable": true,
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "_prevOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "OwnerUpdate",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"acceptOwnership()": {
					"details": "used by a new owner to accept an ownership transfer"
				},
				"sell()": {
					"details": "sells the smart token for ETH note that the function will sell the full allowance amount",
					"return": "ETH sent in return"
				},
				"transferOwnership(address)": {
					"details": "allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner",
					"params": {
						"_newOwner": "new contract owner"
					}
				},
				"withdraw(uint256)": {
					"details": "withdraws ETH from the contract",
					"params": {
						"_amount": "amount of ETH to withdraw"
					}
				},
				"withdrawTokens(address,address,uint256)": {
					"details": "withdraws tokens held by the contract and sends them to an account can only be called by the owner",
					"params": {
						"_amount": "amount to withdraw",
						"_to": "account to receive the new amount",
						"_token": "ERC20 token contract address"
					}
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/legacy/BancorPriceFloor.sol": "BancorPriceFloor"
		},
		"evmVersion": "byzantium",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/legacy/BancorPriceFloor.sol": {
			"keccak256": "0x507ffd1ea689cb213477ee24975374e1c1c0bba44230d1c2f7b879c91d5842ca",
			"urls": [
				"bzzr://105f51664f1a6014427252afaa0275c6050c7f5c488fcdab267f433138b98559"
			]
		},
		"contracts/token/interfaces/IERC20Token.sol": {
			"keccak256": "0x465f98ed290fb4f65f2d74e938f47c2fa9f7302e766266d8f9326d4c703d5ce3",
			"urls": [
				"bzzr://9746fbda9ee3a4d1e0ed3c5f5d27ebb93114139ad29ae04f313de057f9d1bc92"
			]
		},
		"contracts/token/interfaces/INonStandardERC20.sol": {
			"keccak256": "0x26596dd8e564493f7e821102865fb382c21bbedd44ebc920c8d63626f1bf19dc",
			"urls": [
				"bzzr://c750029c9ba7521fbe0c1827a4854a4b8db274d4402e00daaa4683a024c44d93"
			]
		},
		"contracts/token/interfaces/ISmartToken.sol": {
			"keccak256": "0xd9369c561a659cdf78c9b7ad6458c5fd566296bc743f06011b5b02ffeadf0310",
			"urls": [
				"bzzr://b3f5f823967d07420b2c919fb28a51f94206f541124f4f63d835285d0fff8910"
			]
		},
		"contracts/utility/Owned.sol": {
			"keccak256": "0x420234d13d5a10debece92f5264fe4e548d38e4ddba4bb0fae67f121efb5cfb8",
			"urls": [
				"bzzr://6a0a7136d5633bc5e94e7b5f7fd84df2949ec87061ef16d4cb5ec869ebc6de3d"
			]
		},
		"contracts/utility/SafeMath.sol": {
			"keccak256": "0xcc762e1392acd929f86bc79f2d553fefa6692756d84640d3d4530db81bfdae3a",
			"urls": [
				"bzzr://d78ab9d7e21198a64398840779fce2f9631685aab56066e4dbb0826950f40a35"
			]
		},
		"contracts/utility/TokenHolder.sol": {
			"keccak256": "0xea5c8f330999bb5e7360127d38d5a1ce4b1a4b85392c28da43b8c2238884b3c0",
			"urls": [
				"bzzr://6415cecbff420d0f0e0568b73f182000c0bc3d0c1b48930bc84392d1b6c29e03"
			]
		},
		"contracts/utility/Utils.sol": {
			"keccak256": "0x4aaa2acf58cbeaed5f484bdca75daf7caacde07d62ca44b97f020381fc8801e3",
			"urls": [
				"bzzr://feed4fa84f6d4ea9f8e2520e8748cc4e7f8cf2104c8dcdff086db6129fba6f10"
			]
		},
		"contracts/utility/interfaces/IOwned.sol": {
			"keccak256": "0x3bfadfd06a9f37a8687474694252513f00d84ff9074c9d3c69c311d62686e588",
			"urls": [
				"bzzr://b168ba3d91c3119b53b54679bec05592fe124e42f2345e785a4fd08c8225b39e"
			]
		},
		"contracts/utility/interfaces/ITokenHolder.sol": {
			"keccak256": "0x894a791236cbfdc5fd00d2d48f5be0b988d98804b89d9ce3f3c3c90477d590a1",
			"urls": [
				"bzzr://30f405a05448cc0f2efa99e3fc61ff424a8b6c1cee5c2ad05b5542fe41b58b39"
			]
		}
	},
	"version": 1
}