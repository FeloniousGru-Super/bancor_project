{
	"compiler": {
		"version": "0.4.26+commit.4563c3fc"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					},
					{
						"name": "_index",
						"type": "uint32"
					}
				],
				"name": "unregisterConverter",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"name": "tokens",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "acceptOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					},
					{
						"name": "_index",
						"type": "uint32"
					}
				],
				"name": "converterAddress",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_converter",
						"type": "address"
					}
				],
				"name": "tokenAddress",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "tokenCount",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					}
				],
				"name": "converterCount",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					},
					{
						"name": "_converter",
						"type": "address"
					}
				],
				"name": "registerConverter",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "newOwner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "_token",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "_address",
						"type": "address"
					}
				],
				"name": "ConverterAddition",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "_token",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "_address",
						"type": "address"
					}
				],
				"name": "ConverterRemoval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "_prevOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "OwnerUpdate",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"acceptOwnership()": {
					"details": "used by a new owner to accept an ownership transfer"
				},
				"converterAddress(address,uint32)": {
					"details": "returns the converter address associated with the given token\r or zero address if no such converter exists\r",
					"params": {
						"_index": "converter index\r",
						"_token": "token address\r"
					},
					"return": "converter address\r"
				},
				"converterCount(address)": {
					"details": "returns the number of converters associated with the given token\r or 0 if the token isn't registered\r",
					"params": {
						"_token": "token address\r"
					},
					"return": "number of converters\r"
				},
				"registerConverter(address,address)": {
					"details": "adds a new converter address for a given token to the registry\r throws if the converter is already registered\r",
					"params": {
						"_converter": "converter address\r",
						"_token": "token address\r"
					}
				},
				"tokenAddress(address)": {
					"details": "returns the token address associated with the given converter\r or zero address if no such converter exists\r",
					"params": {
						"_converter": "converter address\r"
					},
					"return": "token address\r"
				},
				"tokenCount()": {
					"details": "returns the number of tokens in the registry\r",
					"return": "number of tokens\r"
				},
				"transferOwnership(address)": {
					"details": "allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner",
					"params": {
						"_newOwner": "new contract owner"
					}
				},
				"unregisterConverter(address,uint32)": {
					"details": "removes an existing converter from the registry\r note that the function doesn't scale and might be needed to be called\r multiple times when removing an older converter from a large converter list\r",
					"params": {
						"_index": "converter index\r",
						"_token": "token address\r"
					}
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/BancorConverterRegistry.sol": "BancorConverterRegistry"
		},
		"evmVersion": "byzantium",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/BancorConverterRegistry.sol": {
			"keccak256": "0xa8424062802fb0a7e731e072f52f93d992f32a6f1a538e95eaba7fa2c6a4dac8",
			"urls": [
				"bzzr://b9cfdeddbb8f196f0ba7d473078359cae68bbcc074bc484b70945d64092b8d82"
			]
		},
		"contracts/utility/Owned.sol": {
			"keccak256": "0x420234d13d5a10debece92f5264fe4e548d38e4ddba4bb0fae67f121efb5cfb8",
			"urls": [
				"bzzr://6a0a7136d5633bc5e94e7b5f7fd84df2949ec87061ef16d4cb5ec869ebc6de3d"
			]
		},
		"contracts/utility/Utils.sol": {
			"keccak256": "0x4aaa2acf58cbeaed5f484bdca75daf7caacde07d62ca44b97f020381fc8801e3",
			"urls": [
				"bzzr://feed4fa84f6d4ea9f8e2520e8748cc4e7f8cf2104c8dcdff086db6129fba6f10"
			]
		},
		"contracts/utility/interfaces/IOwned.sol": {
			"keccak256": "0x3bfadfd06a9f37a8687474694252513f00d84ff9074c9d3c69c311d62686e588",
			"urls": [
				"bzzr://b168ba3d91c3119b53b54679bec05592fe124e42f2345e785a4fd08c8225b39e"
			]
		}
	},
	"version": 1
}